@page "/orders"
@inject ApiService ApiService

<h3>Orders</h3>

@if (orders == null)
{
    <p>Loading orders...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Date</th>
                <th>Customer</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.OrderDate.ToString("d")</td>
                    <td>
                        @if (order.Customer != null)
                        {
                            @order.Customer.FirstName @order.Customer.LastName
                        }
                    </td>
                    <td>@order.TotalAmount.ToString("C")</td>
                    <td>
                        <button class="btn btn-sm btn-info" @onclick="() => ViewOrder(order.Id)">View</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteOrder(order.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order>? orders;

    protected override async Task OnInitializedAsync()
    {
        await LoadOrders();
    }

    private async Task LoadOrders()
    {
        orders = await ApiService.GetOrdersAsync();

        foreach (var order in orders)
        {
            if (order.CustomerId > 0)
            {
                order.Customer = await ApiService.GetCustomerByIdAsync(order.CustomerId);
            }
        }
    }

    private async Task DeleteOrder(int id)
    {
        if (await ApiService.DeleteOrderAsync(id))
        {
            await LoadOrders();
        }
    }

    private void ViewOrder(int id)
    {
        // Navigation to order details page would go here
    }
}